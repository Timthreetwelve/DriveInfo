<Window x:Class="DiskDriveInfo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:DiskDriveInfo"
    mc:Ignorable="d"
    Title="DriveInfo"
    Background="WhiteSmoke"
    Closing="Window_Closing"
    ContentRendered="Window_ContentRendered"
    KeyDown="Window_Keydown"
    Left="{Binding WindowLeft, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}"
    ResizeMode="CanMinimize"
    SizeToContent="WidthAndHeight"
    Top="{Binding WindowTop, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}"
    Topmost="{Binding KeepOnTop, Source={x:Static local:UserSettings.Setting}}">

    <!--#region Styles-->
    <!--  Style to right align text in the data grid  -->
    <Window.Resources>
        <Style x:Key="alignRight" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>
        <Style x:Key="alignHeaderRight" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
        </Style>
    </Window.Resources>
    <!--#endregion-->

    <Grid>
        <!--#region Row definitions-->
        <Grid.RowDefinitions>
            <RowDefinition Height="23" />
            <RowDefinition Height="*" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>
        <!--#endregion-->

        <!--#region Menu-->
        <DockPanel
            Grid.Row="0"
            VerticalAlignment="Bottom"
            LastChildFill="False">
            <Menu x:Name="mnuMain"
                Padding="7,0,0,0"
                Background="WhiteSmoke"
                DockPanel.Dock="Top"
                FontSize="14">
                <MenuItem Header="_File">
                    <MenuItem
                        Click="CmCopyToClipboard_Click"
                        Header="Copy to Clipboard"
                        InputGestureText="Ctrl+C">
                        <MenuItem.Icon>
                            <Image Source="Icons/clipboard--plus.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Click="CmExit_Click"
                        Header="Exit"
                        InputGestureText="Alt+F4">
                        <MenuItem.Icon>
                            <Image Source="Icons/door-open-out.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem
                        Click="CmRefresh_Click"
                        Header="Refresh"
                        InputGestureText="F5">
                        <MenuItem.Icon>
                            <Image Source="Icons/arrow-circle-315.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Header="Include Not Ready"
                        IsCheckable="True"
                        IsChecked="{Binding IncludeNotReady, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}"
                        StaysOpenOnClick="False" />
                    <Separator />
                    <MenuItem
                        Header="Shade alternate rows"
                        IsCheckable="True"
                        IsChecked="{Binding ShadeAltRows, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}"
                        StaysOpenOnClick="False" />
                    <Separator />
                    <MenuItem
                        Header="Keep on Top"
                        IsCheckable="True"
                        IsChecked="{Binding KeepOnTop, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}"
                        StaysOpenOnClick="False" />
                    <Separator />
                    <MenuItem Header="Zoom">
                        <MenuItem
                            Click="GridSmaller_Click"
                            Header="Smaller"
                            StaysOpenOnClick="True">
                            <MenuItem.Icon>
                                <Image Source="Icons/magnifier--minus.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Click="GridLarger_Click"
                            Header="Larger"
                            StaysOpenOnClick="True">
                            <MenuItem.Icon>
                                <Image Source="Icons/magnifier--plus.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Icons/magnifier.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem x:Name="mnuAbout"
                        Click="About_Click"
                        Header="About"
                        InputGestureText="F1">
                        <MenuItem.Icon>
                            <Image Source="Icons/information.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Click="ReadMe_Click" Header="View ReadMe">
                        <MenuItem.Icon>
                            <Image Source="Icons/document-list.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </DockPanel>
        <!--#endregion-->

        <!--#region DataGrid-->
        <StackPanel Grid.Row="1">
            <DataGrid x:Name="dataGrid1"
                MinWidth="200"
                Margin="10"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                AutoGenerateColumns="False"
                BorderBrush="#E2E2E2"
                BorderThickness="2,2,1,1"
                CanUserSortColumns="True"
                FontSize="14"
                HeadersVisibility="Column"
                HorizontalGridLinesBrush="#E2E2E2"
                IsReadOnly="True"
                PreviewMouseWheel="DataGrid1_PreviewMouseWheel"
                SelectionUnit="Cell"
                VerticalGridLinesBrush="#E2E2E2">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DriveType}" Value="Not Ready">
                                <Setter Property="Foreground" Value="LightSlateGray" />
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="50"
                        MinWidth="50"
                        Binding="{Binding Name}"
                        Header="Name" />
                    <DataGridTextColumn
                        Width="80"
                        MinWidth="50"
                        Binding="{Binding DriveType}"
                        Header="Type" />
                    <DataGridTextColumn
                        Width="70"
                        MinWidth="60"
                        Binding="{Binding Format}"
                        Header="Format" />
                    <DataGridTextColumn
                        Width="120"
                        MinWidth="60"
                        Binding="{Binding Label}"
                        Header="Label" />
                    <DataGridTextColumn
                        Width="70"
                        MinWidth="65"
                        Binding="{Binding TotalSize, StringFormat=N2}"
                        ElementStyle="{StaticResource alignRight}"
                        Header="Size (GB)"
                        HeaderStyle="{StaticResource alignHeaderRight}" />
                    <DataGridTextColumn
                        Width="70"
                        MinWidth="65"
                        Binding="{Binding GBFree, StringFormat=N2}"
                        ElementStyle="{StaticResource alignRight}"
                        Header="Free (GB)"
                        HeaderStyle="{StaticResource alignHeaderRight}" />
                    <DataGridTextColumn
                        Width="65"
                        MinWidth="55"
                        Binding="{Binding PercentFree, StringFormat=P1}"
                        ElementStyle="{StaticResource alignRight}"
                        Header="Free %"
                        HeaderStyle="{StaticResource alignHeaderRight}" />
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
        <!--#endregion-->

        <!--#region Status bar-->
        <StatusBar
            Grid.Row="2"
            Background="WhiteSmoke"
            DockPanel.Dock="Bottom"
            FontSize="{Binding ElementName=mnuMain, Path=FontSize}">
            <StatusBarItem x:Name="sb1"
                Padding="11,0,0,4"
                Content="Hello" />
        </StatusBar>
        <!--#endregion-->

        <!--#region Context Menu-->
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Name="cmRefresh"
                    Click="CmRefresh_Click"
                    Header="Refresh"
                    InputGestureText="F5" />
                <MenuItem Name="cmColors"
                    Header="Shade alternate rows"
                    InputGestureText="F7"
                    IsCheckable="True"
                    IsChecked="{Binding ShadeAltRows, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}" />
                <Separator />
                <MenuItem Name="cmCopyToClipboard"
                    Click="CmCopyToClipboard_Click"
                    Header="Copy to clipboard" />
                <MenuItem Name="cmTopmost"
                    Header="Keep on Top"
                    IsCheckable="True"
                    IsChecked="{Binding KeepOnTop, Source={x:Static local:UserSettings.Setting}, Mode=TwoWay}" />
                <Separator />
                <MenuItem Name="cmExit"
                    Click="CmExit_Click"
                    Header="Exit"
                    InputGestureText="Esc" />
            </ContextMenu>
        </Grid.ContextMenu>
        <!--#endregion-->
    </Grid>
</Window>
